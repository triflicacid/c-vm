#include "signatures.hpp"

namespace assembler::instruction {
    /** List of all available instruction signatures. */
    std::vector<Signature> signature_list = {
            { "nop", { }, OP_NOP },
            { "hlt", { }, OP_HALT },

            { "mov", { ParamType::Literal, ParamType::Register }, OP_MOV_LIT_REG },
            { "mov8", { ParamType::Literal, ParamType::Register }, OP_MOV8_LIT_REG },
            { "mov16", { ParamType::Literal, ParamType::Register }, OP_MOV16_LIT_REG },
            { "mov32", { ParamType::Literal, ParamType::Register }, OP_MOV32_LIT_REG },
            { "mov64", { ParamType::Literal, ParamType::Register }, OP_MOV64_LIT_REG },

            { "mov", { ParamType::Literal, ParamType::Address }, OP_MOV_LIT_MEM },
            { "mov8", { ParamType::Literal, ParamType::Address }, OP_MOV8_LIT_MEM },
            { "mov16", { ParamType::Literal, ParamType::Address }, OP_MOV16_LIT_MEM },
            { "mov32", { ParamType::Literal, ParamType::Address }, OP_MOV32_LIT_MEM },
            { "mov64", { ParamType::Literal, ParamType::Address }, OP_MOV64_LIT_MEM },

            { "mov", { ParamType::Register, ParamType::Literal, ParamType::Register }, OP_MOV_LIT_OFF_REG },
            { "mov8", { ParamType::Register, ParamType::Literal, ParamType::Register }, OP_MOV8_LIT_OFF_REG },
            { "mov16", { ParamType::Register, ParamType::Literal, ParamType::Register }, OP_MOV16_LIT_OFF_REG },
            { "mov32", { ParamType::Register, ParamType::Literal, ParamType::Register }, OP_MOV32_LIT_OFF_REG },
            { "mov64", { ParamType::Register, ParamType::Literal, ParamType::Register }, OP_MOV64_LIT_OFF_REG },

            { "mov", { ParamType::Address, ParamType::Register }, OP_MOV_MEM_REG },
            { "mov8", { ParamType::Address, ParamType::Register }, OP_MOV8_MEM_REG },
            { "mov16", { ParamType::Address, ParamType::Register }, OP_MOV16_MEM_REG },
            { "mov32", { ParamType::Address, ParamType::Register }, OP_MOV32_MEM_REG },
            { "mov64", { ParamType::Address, ParamType::Register }, OP_MOV64_MEM_REG },

            { "mov", { ParamType::Register, ParamType::Address }, OP_MOV_REG_MEM },
            { "mov8", { ParamType::Register, ParamType::Address }, OP_MOV8_REG_MEM },
            { "mov16", { ParamType::Register, ParamType::Address }, OP_MOV16_REG_MEM },
            { "mov32", { ParamType::Register, ParamType::Address }, OP_MOV32_REG_MEM },
            { "mov64", { ParamType::Register, ParamType::Address }, OP_MOV64_REG_MEM },

            { "mov", { ParamType::RegisterPointer, ParamType::Register }, OP_MOV_REGPTR_REG },
            { "mov8", { ParamType::RegisterPointer, ParamType::Register }, OP_MOV8_REGPTR_REG },
            { "mov16", { ParamType::RegisterPointer, ParamType::Register }, OP_MOV16_REGPTR_REG },
            { "mov32", { ParamType::RegisterPointer, ParamType::Register }, OP_MOV32_REGPTR_REG },
            { "mov64", { ParamType::RegisterPointer, ParamType::Register }, OP_MOV64_REGPTR_REG },

            { "mov", { ParamType::Register, ParamType::Register }, OP_MOV_REG_REG },

            { "mov", { ParamType::Register, ParamType::RegisterPointer }, OP_MOV_REG_REGPTR },
            { "mov8", { ParamType::Register, ParamType::RegisterPointer }, OP_MOV8_REG_REGPTR },
            { "mov16", { ParamType::Register, ParamType::RegisterPointer }, OP_MOV16_REG_REGPTR },
            { "mov32", { ParamType::Register, ParamType::RegisterPointer }, OP_MOV32_REG_REGPTR },
            { "mov64", { ParamType::Register, ParamType::RegisterPointer }, OP_MOV64_REG_REGPTR },

            { "and", { ParamType::Register, ParamType::Literal }, OP_AND_REG_LIT },
            { "and8", { ParamType::Register, ParamType::Literal }, OP_AND8_REG_LIT },
            { "and16", { ParamType::Register, ParamType::Literal }, OP_AND16_REG_LIT },
            { "and32", { ParamType::Register, ParamType::Literal }, OP_AND32_REG_LIT },
            { "and64", { ParamType::Register, ParamType::Literal }, OP_AND64_REG_LIT },
            { "and", { ParamType::Register, ParamType::Register }, OP_AND_REG_REG },
            { "and", { ParamType::Literal, ParamType::Address, ParamType::Address }, OP_AND_MEM_MEM },

            { "or", { ParamType::Register, ParamType::Literal }, OP_OR_REG_LIT },
            { "or8", { ParamType::Register, ParamType::Literal }, OP_OR8_REG_LIT },
            { "or16", { ParamType::Register, ParamType::Literal }, OP_OR16_REG_LIT },
            { "or32", { ParamType::Register, ParamType::Literal }, OP_OR32_REG_LIT },
            { "or64", { ParamType::Register, ParamType::Literal }, OP_OR64_REG_LIT },
            { "or", { ParamType::Register, ParamType::Register }, OP_OR_REG_REG },
            { "or", { ParamType::Literal, ParamType::Address, ParamType::Address }, OP_OR_MEM_MEM },

            { "xor", { ParamType::Register, ParamType::Literal }, OP_XOR_REG_LIT },
            { "xor8", { ParamType::Register, ParamType::Literal }, OP_XOR8_REG_LIT },
            { "xor16", { ParamType::Register, ParamType::Literal }, OP_XOR16_REG_LIT },
            { "xor32", { ParamType::Register, ParamType::Literal }, OP_XOR32_REG_LIT },
            { "xor64", { ParamType::Register, ParamType::Literal }, OP_XOR64_REG_LIT },
            { "xor", { ParamType::Register, ParamType::Register }, OP_XOR_REG_REG },
            { "xor", { ParamType::Literal, ParamType::Address, ParamType::Address }, OP_XOR_MEM_MEM },

            { "not", { ParamType::Register }, OP_NOT_REG },
            { "not", { ParamType::Address }, OP_NOT_MEM },

            { "neg", { ParamType::Register }, OP_NEG },
            { "negf32", { ParamType::Register }, OP_NEGF32 },
            { "negf64", { ParamType::Register }, OP_NEGF64 },

            { "slr", { ParamType::Register, ParamType::Literal }, OP_LRSHIFT_LIT },
            { "slr", { ParamType::Register, ParamType::Register }, OP_LRSHIFT_REG },
            { "sar", { ParamType::Register, ParamType::Literal }, OP_ARSHIFT_LIT },
            { "sar", { ParamType::Register, ParamType::Register }, OP_ARSHIFT_REG },

            { "sll", { ParamType::Register, ParamType::Literal }, OP_LLSHIFT_LIT },
            { "sll", { ParamType::Register, ParamType::Register }, OP_LLSHIFT_REG },

            { "ci8i16", { ParamType::Register }, OP_CVT_i8_i16 },
            { "ci16i8", { ParamType::Register }, OP_CVT_i16_i8 },
            { "ci16i32", { ParamType::Register }, OP_CVT_i16_i32 },
            { "ci32i16", { ParamType::Register }, OP_CVT_i32_i16 },
            { "ci32i64", { ParamType::Register }, OP_CVT_i32_i64 },
            { "ci64i32", { ParamType::Register }, OP_CVT_i64_i32 },
            { "ci32f32", { ParamType::Register }, OP_CVT_i32_f32 },
            { "cf32i32", { ParamType::Register }, OP_CVT_f32_i32 },
            { "ci64f64", { ParamType::Register }, OP_CVT_i64_f64 },
            { "cf64i64", { ParamType::Register }, OP_CVT_f64_i64 },

            { "add", { ParamType::Register, ParamType::Literal }, OP_ADD_REG_LIT },
            { "addf32", { ParamType::Register, ParamType::Literal }, OP_ADDF32_REG_LIT },
            { "addf64", { ParamType::Register, ParamType::Literal }, OP_ADDF64_REG_LIT },
            { "add", { ParamType::Register, ParamType::Register }, OP_ADD_REG_REG },
            { "addf32", { ParamType::Register, ParamType::Register }, OP_ADDF32_REG_REG },
            { "add64", { ParamType::Register, ParamType::Register }, OP_ADDF64_REG_REG },
            { "add", { ParamType::Literal, ParamType::Address, ParamType::Address }, OP_ADD_MEM_MEM },
            { "add", { ParamType::Literal, ParamType::Address, ParamType::Literal }, OP_ADD_MEM_LIT },

            { "sub", { ParamType::Register, ParamType::Literal }, OP_SUB_REG_LIT },
            { "subf32", { ParamType::Register, ParamType::Literal }, OP_SUBF32_REG_LIT },
            { "subf64", { ParamType::Register, ParamType::Literal }, OP_SUBF64_REG_LIT },
            { "sub", { ParamType::Register, ParamType::Register }, OP_SUB_REG_REG },
            { "subf32", { ParamType::Register, ParamType::Register }, OP_SUBF32_REG_REG },
            { "sub64", { ParamType::Register, ParamType::Register }, OP_SUBF64_REG_REG },
            { "sub", { ParamType::Literal, ParamType::Address, ParamType::Address }, OP_SUB_MEM_MEM },

            { "mul", { ParamType::Register, ParamType::Literal }, OP_MUL_REG_LIT },
            { "mulf32", { ParamType::Register, ParamType::Literal }, OP_MULF32_REG_LIT },
            { "mulf64", { ParamType::Register, ParamType::Literal }, OP_MULF64_REG_LIT },
            { "mul", { ParamType::Register, ParamType::Register }, OP_MUL_REG_REG },
            { "mulf32", { ParamType::Register, ParamType::Register }, OP_MULF32_REG_REG },
            { "mul64", { ParamType::Register, ParamType::Register }, OP_MULF64_REG_REG },

            { "div", { ParamType::Register, ParamType::Literal }, OP_DIV_REG_LIT },
            { "divf32", { ParamType::Register, ParamType::Literal }, OP_DIVF32_REG_LIT },
            { "divf64", { ParamType::Register, ParamType::Literal }, OP_DIVF64_REG_LIT },
            { "div", { ParamType::Register, ParamType::Register }, OP_DIV_REG_REG },
            { "divf32", { ParamType::Register, ParamType::Register }, OP_DIVF32_REG_REG },
            { "div64", { ParamType::Register, ParamType::Register }, OP_DIVF64_REG_REG },

            { "cmp", { ParamType::Register, ParamType::Literal }, OP_CMP_REG_LIT },
            { "cmpf32", { ParamType::Register, ParamType::Literal }, OP_CMPF32_REG_LIT },
            { "cmpf64", { ParamType::Register, ParamType::Literal }, OP_CMPF64_REG_LIT },
            { "cmp", { ParamType::Register, ParamType::Register }, OP_CMP_REG_REG },
            { "cmpf32", { ParamType::Register, ParamType::Register }, OP_CMPF32_REG_REG },
            { "cmp64", { ParamType::Register, ParamType::Register }, OP_CMPF64_REG_REG },
            { "cmp", { ParamType::Literal, ParamType::Literal }, OP_CMP_LIT_LIT },
            { "cmp", { ParamType::Address, ParamType::Address }, OP_CMP_MEM_MEM },

            { "jmp", { ParamType::Literal }, OP_JMP_LIT },
            { "jmp", { ParamType::Register }, OP_JMP_REG },
            { "jeq", { ParamType::Literal }, OP_JMP_EQ_LIT },
            { "jeq", { ParamType::Register }, OP_JMP_EQ_REG },
            { "jne", { ParamType::Literal }, OP_JMP_NEQ_LIT },
            { "jne", { ParamType::Register }, OP_JMP_NEQ_REG },
            { "jgt", { ParamType::Literal }, OP_JMP_GT_LIT },
            { "jgt", { ParamType::Register }, OP_JMP_GT_REG },
            { "jlt", { ParamType::Literal }, OP_JMP_LT_LIT },
            { "jlt", { ParamType::Register }, OP_JMP_LT_REG },

            { "psh", { ParamType::Literal }, OP_PUSH_LIT },
            { "psh8", { ParamType::Literal }, OP_PUSH8_LIT },
            { "psh16", { ParamType::Literal }, OP_PUSH16_LIT },
            { "psh32", { ParamType::Literal }, OP_PUSH32_LIT },
            { "psh64", { ParamType::Literal }, OP_PUSH64_LIT },
            { "psh", { ParamType::Address }, OP_PUSH_MEM },
            { "psh8", { ParamType::Address }, OP_PUSH8_MEM },
            { "psh16", { ParamType::Address }, OP_PUSH16_MEM },
            { "psh32", { ParamType::Address }, OP_PUSH32_MEM },
            { "psh64", { ParamType::Address }, OP_PUSH64_MEM },
            { "psh", { ParamType::Literal, ParamType::Address }, OP_PUSHN_MEM },
            { "psh", { ParamType::Register }, OP_PUSH_REG },
            { "psh8", { ParamType::Register }, OP_PUSH8_REG },
            { "psh16", { ParamType::Register }, OP_PUSH16_REG },
            { "psh32", { ParamType::Register }, OP_PUSH32_REG },
            { "psh64", { ParamType::Register }, OP_PUSH64_REG },

            { "pop", { ParamType::Register }, OP_POP_REG },
            { "pop8", { ParamType::Register }, OP_POP8_REG },
            { "pop16", { ParamType::Register }, OP_POP16_REG },
            { "pop32", { ParamType::Register }, OP_POP32_REG },
            { "pop64", { ParamType::Register }, OP_POP64_REG },
            { "pop", { ParamType::Literal, ParamType::Address }, OP_POPN_MEM },

            { "cal", { ParamType::Literal }, OP_CALL_LIT },
            { "cal", { ParamType::Register }, OP_CALL_REG },
            { "syscall", { }, OP_SYSCALL },
    };
}
